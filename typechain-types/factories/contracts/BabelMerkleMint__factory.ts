/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BabelMerkleMint,
  BabelMerkleMintInterface,
} from "../../contracts/BabelMerkleMint";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleroot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200182a3803806200182a833981016040819052620000349162000144565b6040805180820182526005815264109858995b60da1b6020808301918252835180850190945260038452622624a160e91b9084015281519192916200007c916000916200009e565b508051620000929060019060208401906200009e565b5050506080526200019b565b828054620000ac906200015e565b90600052602060002090601f016020900481019282620000d057600085556200011b565b82601f10620000eb57805160ff19168380011785556200011b565b828001600101855582156200011b579182015b828111156200011b578251825591602001919060010190620000fe565b50620001299291506200012d565b5090565b5b808211156200012957600081556001016200012e565b6000602082840312156200015757600080fd5b5051919050565b600181811c908216806200017357607f821691505b602082108114156200019557634e487b7160e01b600052602260045260246000fd5b50919050565b60805161166c620001be600039600081816102660152610b8e015261166c6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde146101ff578063c87b56dd14610212578063e985e9c514610225578063ebf0c7171461026157600080fd5b80636352211e146101b057806370a08231146101c357806395d89b41146101e4578063a22cb465146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd146101775780633d13f8741461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d61010836600461134b565b610288565b60405190151581526020015b60405180910390f35b61012a6102da565b6040516101199190611436565b61014a610145366004611385565b61036c565b6040516001600160a01b039091168152602001610119565b610175610170366004611297565b610406565b005b610175610185366004611143565b61051c565b6101756101983660046112c1565b61054d565b6101756101ab366004611143565b6105e6565b61014a6101be366004611385565b610601565b6101d66101d13660046110f5565b610678565b604051908152602001610119565b61012a6106ff565b6101756101fa36600461125b565b61070e565b61017561020d36600461117f565b61071d565b61012a610220366004611385565b61074f565b61010d610233366004611110565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101d67f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b031982166380ac58cd60e01b14806102b957506001600160e01b03198216635b5e139f60e01b145b806102d457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102e99061155b565b80601f01602080910402602001604051908101604052809291908181526020018280546103159061155b565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103ea5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061041182610601565b9050806001600160a01b0316836001600160a01b0316141561047f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103e1565b336001600160a01b038216148061049b575061049b8133610233565b61050d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103e1565b6105178383610837565b505050565b61052633826108a5565b6105425760405162461bcd60e51b81526004016103e19061149b565b61051783838361099c565b61059361055a8585610b38565b838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610b8692505050565b6105d65760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b60448201526064016103e1565b6105e08484610bb3565b50505050565b6105178383836040518060200160405280600081525061071d565b6000818152600260205260408120546001600160a01b0316806102d45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103e1565b60006001600160a01b0382166106e35760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103e1565b506001600160a01b031660009081526003602052604090205490565b6060600180546102e99061155b565b610719338383610bcd565b5050565b61072733836108a5565b6107435760405162461bcd60e51b81526004016103e19061149b565b6105e084848484610c9c565b6000818152600260205260409020546060906001600160a01b03166107ce5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103e1565b60006107e560408051602081019091526000815290565b905060008151116108055760405180602001604052806000815250610830565b8061080f84610ccf565b6040516020016108209291906113ca565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061086c82610601565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661091e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103e1565b600061092983610601565b9050806001600160a01b0316846001600160a01b031614806109645750836001600160a01b03166109598461036c565b6001600160a01b0316145b8061099457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109af82610601565b6001600160a01b031614610a135760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103e1565b6001600160a01b038216610a755760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103e1565b610a80600082610837565b6001600160a01b0383166000908152600360205260408120805460019290610aa9908490611518565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ad79084906114ec565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60008183604051602001610b6892919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905092915050565b6000610830827f000000000000000000000000000000000000000000000000000000000000000085610dcd565b610719828260405180602001604052806000815250610de3565b816001600160a01b0316836001600160a01b03161415610c2f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103e1565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ca784848461099c565b610cb384848484610e16565b6105e05760405162461bcd60e51b81526004016103e190611449565b606081610cf35750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d1d5780610d0781611596565b9150610d169050600a83611504565b9150610cf7565b60008167ffffffffffffffff811115610d3857610d38611607565b6040519080825280601f01601f191660200182016040528015610d62576020820181803683370190505b5090505b841561099457610d77600183611518565b9150610d84600a866115b1565b610d8f9060306114ec565b60f81b818381518110610da457610da46115f1565b60200101906001600160f81b031916908160001a905350610dc6600a86611504565b9450610d66565b600082610dda8584610f23565b14949350505050565b610ded8383610f97565b610dfa6000848484610e16565b6105175760405162461bcd60e51b81526004016103e190611449565b60006001600160a01b0384163b15610f1857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e5a9033908990889088906004016113f9565b602060405180830381600087803b158015610e7457600080fd5b505af1925050508015610ea4575060408051601f3d908101601f19168201909252610ea191810190611368565b60015b610efe573d808015610ed2576040519150601f19603f3d011682016040523d82523d6000602084013e610ed7565b606091505b508051610ef65760405162461bcd60e51b81526004016103e190611449565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610994565b506001949350505050565b600081815b8451811015610f8f576000858281518110610f4557610f456115f1565b60200260200101519050808311610f6b5760008381526020829052604090209250610f7c565b600081815260208490526040902092505b5080610f8781611596565b915050610f28565b509392505050565b6001600160a01b038216610fed5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103e1565b6000818152600260205260409020546001600160a01b0316156110525760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103e1565b6001600160a01b038216600090815260036020526040812080546001929061107b9084906114ec565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b03811681146110f057600080fd5b919050565b60006020828403121561110757600080fd5b610830826110d9565b6000806040838503121561112357600080fd5b61112c836110d9565b915061113a602084016110d9565b90509250929050565b60008060006060848603121561115857600080fd5b611161846110d9565b925061116f602085016110d9565b9150604084013590509250925092565b6000806000806080858703121561119557600080fd5b61119e856110d9565b93506111ac602086016110d9565b925060408501359150606085013567ffffffffffffffff808211156111d057600080fd5b818701915087601f8301126111e457600080fd5b8135818111156111f6576111f6611607565b604051601f8201601f19908116603f0116810190838211818310171561121e5761121e611607565b816040528281528a602084870101111561123757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561126e57600080fd5b611277836110d9565b91506020830135801515811461128c57600080fd5b809150509250929050565b600080604083850312156112aa57600080fd5b6112b3836110d9565b946020939093013593505050565b600080600080606085870312156112d757600080fd5b6112e0856110d9565b935060208501359250604085013567ffffffffffffffff8082111561130457600080fd5b818701915087601f83011261131857600080fd5b81358181111561132757600080fd5b8860208260051b850101111561133c57600080fd5b95989497505060200194505050565b60006020828403121561135d57600080fd5b81356108308161161d565b60006020828403121561137a57600080fd5b81516108308161161d565b60006020828403121561139757600080fd5b5035919050565b600081518084526113b681602086016020860161152f565b601f01601f19169290920160200192915050565b600083516113dc81846020880161152f565b8351908301906113f081836020880161152f565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061142c9083018461139e565b9695505050505050565b602081526000610830602083018461139e565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156114ff576114ff6115c5565b500190565b600082611513576115136115db565b500490565b60008282101561152a5761152a6115c5565b500390565b60005b8381101561154a578181015183820152602001611532565b838111156105e05750506000910152565b600181811c9082168061156f57607f821691505b6020821081141561159057634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115aa576115aa6115c5565b5060010190565b6000826115c0576115c06115db565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461163357600080fd5b5056fea264697066735822122027fad165928e59e3785e5618607bf456ea996637d40e4bb1f24f574ba55ded7b64736f6c63430008060033";

type BabelMerkleMintConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BabelMerkleMintConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BabelMerkleMint__factory extends ContractFactory {
  constructor(...args: BabelMerkleMintConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    merkleroot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BabelMerkleMint> {
    return super.deploy(
      merkleroot,
      overrides || {}
    ) as Promise<BabelMerkleMint>;
  }
  override getDeployTransaction(
    merkleroot: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(merkleroot, overrides || {});
  }
  override attach(address: string): BabelMerkleMint {
    return super.attach(address) as BabelMerkleMint;
  }
  override connect(signer: Signer): BabelMerkleMint__factory {
    return super.connect(signer) as BabelMerkleMint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BabelMerkleMintInterface {
    return new utils.Interface(_abi) as BabelMerkleMintInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BabelMerkleMint {
    return new Contract(address, _abi, signerOrProvider) as BabelMerkleMint;
  }
}

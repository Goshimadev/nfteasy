/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Babel, BabelInterface } from "../../contracts/Babel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
    ],
    name: "TokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "metadataURIs",
        type: "string[]",
      },
    ],
    name: "safeBatchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newTokenURI",
        type: "string",
      },
    ],
    name: "updateTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a805460ff191690553480156200001b57600080fd5b5060405162002f6438038062002f648339810160408190526200003e916200036f565b60405180604001604052806005815260200164109858995b60da1b815250604051806040016040528060038152602001622624a160e91b815250828282816000908051906020019062000093929190620002c9565b508051620000a9906001906020840190620002c9565b505050620000c6620000c0620000f660201b60201c565b62000112565b601080546001600160a01b0319166001600160a01b038316179055620000ec8362000164565b50505050620003de565b60006200010d620001c860201b6200118a1760201c565b905090565b600e80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff1615620001ad5760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481a5b9a5d195960921b604482015260640160405180910390fd5b620001b88162000227565b50600a805460ff19166001179055565b6000333014156200022157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620002249050565b50335b90565b6040518060800160405280604f815260200162002f15604f9139805160209182012082519282019290922060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401523060808401524660a0808501919091528151808503909101815260c090930190528151910120600b55565b828054620002d790620003a1565b90600052602060002090601f016020900481019282620002fb576000855562000346565b82601f106200031657805160ff191683800117855562000346565b8280016001018555821562000346579182015b828111156200034657825182559160200191906001019062000329565b506200035492915062000358565b5090565b5b8082111562000354576000815560010162000359565b6000602082840312156200038257600080fd5b81516001600160a01b03811681146200039a57600080fd5b9392505050565b600181811c90821680620003b657607f821691505b60208210811415620003d857634e487b7160e01b600052602260045260246000fd5b50919050565b612b2780620003ee6000396000f3fe6080604052600436106101cd5760003560e01c806342966c68116100f757806395d89b4111610095578063d204c45e11610064578063d204c45e14610528578063e8a3d48514610548578063e985e9c51461058e578063f2fde38b146105ae57600080fd5b806395d89b41146104b3578063a22cb465146104c8578063b88d4fde146104e8578063c87b56dd1461050857600080fd5b80636352211e116100d15780636352211e1461044057806370a0823114610460578063715018a6146104805780638da5cb5b1461049557600080fd5b806342966c68146103e05780634f6ccce71461040057806358dd6d951461042057600080fd5b806318160ddd1161016f5780632d0335ab1161013e5780632d0335ab146103575780632f745c591461038d5780633408e470146103ad57806342842e0e146103c057600080fd5b806318160ddd146102e357806318e97fd11461030257806320379ee51461032257806323b872dd1461033757600080fd5b8063095ea7b3116101ab578063095ea7b3146102615780630c53c51c146102835780630f7e597014610296578063162094c4146102c357600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed36600461265f565b6105ce565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c6105df565b6040516101fe9190612820565b34801561023557600080fd5b506102496102443660046126b6565b610671565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c366004612633565b6106fe565b005b61021c610291366004612565565b610826565b3480156102a257600080fd5b5061021c604051806040016040528060018152602001603160f81b81525081565b3480156102cf57600080fd5b506102816102de3660046126cf565b610a10565b3480156102ef57600080fd5b506008545b6040519081526020016101fe565b34801561030e57600080fd5b5061028161031d3660046126cf565b610a67565b34801561032e57600080fd5b50600b546102f4565b34801561034357600080fd5b506102816103523660046123aa565b610b41565b34801561036357600080fd5b506102f4610372366004612354565b6001600160a01b03166000908152600c602052604090205490565b34801561039957600080fd5b506102f46103a8366004612633565b610b79565b3480156103b957600080fd5b50466102f4565b3480156103cc57600080fd5b506102816103db3660046123aa565b610c0f565b3480156103ec57600080fd5b506102816103fb3660046126b6565b610c2a565b34801561040c57600080fd5b506102f461041b3660046126b6565b610ca6565b34801561042c57600080fd5b5061028161043b366004612457565b610d39565b34801561044c57600080fd5b5061024961045b3660046126b6565b610dcd565b34801561046c57600080fd5b506102f461047b366004612354565b610e44565b34801561048c57600080fd5b50610281610ecb565b3480156104a157600080fd5b50600e546001600160a01b0316610249565b3480156104bf57600080fd5b5061021c610f20565b3480156104d457600080fd5b506102816104e3366004612532565b610f2f565b3480156104f457600080fd5b506102816105033660046123eb565b610f41565b34801561051457600080fd5b5061021c6105233660046126b6565b610f80565b34801561053457600080fd5b506102816105433660046125e3565b610f8b565b34801561055457600080fd5b5060408051808201909152601e81527f68747470733a2f2f617277656176652e6e65742f3c796f75725f55524c3e0000602082015261021c565b34801561059a57600080fd5b506101f26105a9366004612371565b611003565b3480156105ba57600080fd5b506102816105c9366004612354565b6110d3565b60006105d9826111e7565b92915050565b6060600080546105ee906129ab565b80601f016020809104026020016040519081016040528092919081815260200182805461061a906129ab565b80156106675780601f1061063c57610100808354040283529160200191610667565b820191906000526020600020905b81548152906001019060200180831161064a57829003601f168201915b5050505050905090565b600061067c8261120c565b6106e25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061070982610dcd565b9050806001600160a01b0316836001600160a01b031614156107775760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106d9565b806001600160a01b0316610789611229565b6001600160a01b031614806107a557506107a5816105a9611229565b6108175760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106d9565b6108218383611238565b505050565b60408051606081810183526001600160a01b0388166000818152600c60209081529085902054845283015291810186905261086487828787876112a6565b6108ba5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b60648201526084016106d9565b6001600160a01b0387166000908152600c60205260409020546108de906001611396565b6001600160a01b0388166000908152600c60205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b9061092e90899033908a906127ae565b60405180910390a1600080306001600160a01b0316888a604051602001610956929190612748565b60408051601f19818403018152908290526109709161272c565b6000604051808303816000865af19150503d80600081146109ad576040519150601f19603f3d011682016040523d82523d6000602084013e6109b2565b606091505b509150915081610a045760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c0000000060448201526064016106d9565b98975050505050505050565b610a18611229565b6001600160a01b0316610a33600e546001600160a01b031690565b6001600160a01b031614610a595760405162461bcd60e51b81526004016106d990612885565b610a6382826113a9565b5050565b6000610a7283610dcd565b9050806001600160a01b0316610a86611229565b6001600160a01b031614610afa5760405162461bcd60e51b815260206004820152603560248201527f4552433732315472616461626c653a2063616c6c6572206973206e6f74207468604482015274329037bbb732b91037b3103a3434b9903a37b5b2b760591b60648201526084016106d9565b610b0483836113a9565b827f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd83604051610b349190612820565b60405180910390a2505050565b610b52610b4c611229565b82611434565b610b6e5760405162461bcd60e51b81526004016106d9906128ba565b6108218383836114f6565b6000610b8483610e44565b8210610be65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016106d9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61082183838360405180602001604052806000815250610f41565b610c35610b4c611229565b610c9a5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016106d9565b610ca38161169d565b50565b6000610cb160085490565b8210610d145760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016106d9565b60088281548110610d2757610d27612a57565b90600052602060002001549050919050565b610d41611229565b6001600160a01b0316610d5c600e546001600160a01b031690565b6001600160a01b031614610d825760405162461bcd60e51b81526004016106d990612885565b600181511115610a635760005b815181101561082157610dbb83838381518110610dae57610dae612a57565b6020026020010151610f8b565b80610dc5816129e6565b915050610d8f565b6000818152600260205260408120546001600160a01b0316806105d95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106d9565b60006001600160a01b038216610eaf5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106d9565b506001600160a01b031660009081526003602052604090205490565b610ed3611229565b6001600160a01b0316610eee600e546001600160a01b031690565b6001600160a01b031614610f145760405162461bcd60e51b81526004016106d990612885565b610f1e60006116a6565b565b6060600180546105ee906129ab565b610a63610f3a611229565b83836116f8565b610f52610f4c611229565b83611434565b610f6e5760405162461bcd60e51b81526004016106d9906128ba565b610f7a848484846117c7565b50505050565b60606105d9826117fa565b610f93611229565b6001600160a01b0316610fae600e546001600160a01b031690565b6001600160a01b031614610fd45760405162461bcd60e51b81526004016106d990612885565b6000610fdf600f5490565b9050610feb8382611969565b610ff581836113a9565b610821600f80546001019055565b60105460405163c455279160e01b81526001600160a01b03848116600483015260009281169190841690829063c45527919060240160206040518083038186803b15801561105057600080fd5b505afa158015611064573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110889190612699565b6001600160a01b031614156110a15760019150506105d9565b6001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b949350505050565b6110db611229565b6001600160a01b03166110f6600e546001600160a01b031690565b6001600160a01b03161461111c5760405162461bcd60e51b81526004016106d990612885565b6001600160a01b0381166111815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d9565b610ca3816116a6565b6000333014156111e157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506111e49050565b50335b90565b60006001600160e01b0319821663780e9d6360e01b14806105d957506105d982611983565b6000908152600260205260409020546001600160a01b0316151590565b600061123361118a565b905090565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061126d82610dcd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006001600160a01b03861661130c5760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201526424a3a722a960d91b60648201526084016106d9565b600161131f61131a876119d3565b611a50565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa15801561136d573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b60006113a2828461293c565b9392505050565b6113b28261120c565b6114155760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016106d9565b6000828152600d60209081526040909120825161082192840190612215565b600061143f8261120c565b6114a05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106d9565b60006114ab83610dcd565b9050806001600160a01b0316846001600160a01b031614806114e65750836001600160a01b03166114db84610671565b6001600160a01b0316145b806110cb57506110cb8185611003565b826001600160a01b031661150982610dcd565b6001600160a01b03161461156d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016106d9565b6001600160a01b0382166115cf5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106d9565b6115da838383611a80565b6115e5600082611238565b6001600160a01b038316600090815260036020526040812080546001929061160e908490612968565b90915550506001600160a01b038216600090815260036020526040812080546001929061163c90849061293c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ca381611a8b565b600e80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561175a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106d9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117d28484846114f6565b6117de84848484611acb565b610f7a5760405162461bcd60e51b81526004016106d990612833565b60606118058261120c565b61186b5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016106d9565b6000828152600d602052604081208054611884906129ab565b80601f01602080910402602001604051908101604052809291908181526020018280546118b0906129ab565b80156118fd5780601f106118d2576101008083540402835291602001916118fd565b820191906000526020600020905b8154815290600101906020018083116118e057829003601f168201915b50505050509050600061191b60408051602081019091526000815290565b905080516000141561192e575092915050565b81511561196057808260405160200161194892919061277f565b60405160208183030381529060405292505050919050565b6110cb84611bdf565b610a63828260405180602001604052806000815250611cb6565b60006001600160e01b031982166380ac58cd60e01b14806119b457506001600160e01b03198216635b5e139f60e01b145b806105d957506301ffc9a760e01b6001600160e01b03198316146105d9565b6000604051806080016040528060438152602001612aaf6043913980516020918201208351848301516040808701518051908601209051611a33950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b6000611a5b600b5490565b60405161190160f01b6020820152602281019190915260428101839052606201611a33565b610821838383611ce9565b611a9481611da1565b6000818152600d602052604090208054611aad906129ab565b159050610ca3576000818152600d60205260408120610ca391612299565b60006001600160a01b0384163b15611bd457836001600160a01b031663150b7a02611af4611229565b8786866040518563ffffffff1660e01b8152600401611b1694939291906127e3565b602060405180830381600087803b158015611b3057600080fd5b505af1925050508015611b60575060408051601f3d908101601f19168201909252611b5d9181019061267c565b60015b611bba573d808015611b8e576040519150601f19603f3d011682016040523d82523d6000602084013e611b93565b606091505b508051611bb25760405162461bcd60e51b81526004016106d990612833565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110cb565b506001949350505050565b6060611bea8261120c565b611c4e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106d9565b6000611c6560408051602081019091526000815290565b90506000815111611c8557604051806020016040528060008152506113a2565b80611c8f84611e48565b604051602001611ca092919061277f565b6040516020818303038152906040529392505050565b611cc08383611f46565b611ccd6000848484611acb565b6108215760405162461bcd60e51b81526004016106d990612833565b6001600160a01b038316611d4457611d3f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611d67565b816001600160a01b0316836001600160a01b031614611d6757611d678382612085565b6001600160a01b038216611d7e5761082181612122565b826001600160a01b0316826001600160a01b0316146108215761082182826121d1565b6000611dac82610dcd565b9050611dba81600084611a80565b611dc5600083611238565b6001600160a01b0381166000908152600360205260408120805460019290611dee908490612968565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b606081611e6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611e965780611e80816129e6565b9150611e8f9050600a83612954565b9150611e70565b60008167ffffffffffffffff811115611eb157611eb1612a6d565b6040519080825280601f01601f191660200182016040528015611edb576020820181803683370190505b5090505b84156110cb57611ef0600183612968565b9150611efd600a86612a01565b611f0890603061293c565b60f81b818381518110611f1d57611f1d612a57565b60200101906001600160f81b031916908160001a905350611f3f600a86612954565b9450611edf565b6001600160a01b038216611f9c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106d9565b611fa58161120c565b15611ff25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106d9565b611ffe60008383611a80565b6001600160a01b038216600090815260036020526040812080546001929061202790849061293c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161209284610e44565b61209c9190612968565b6000838152600760205260409020549091508082146120ef576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061213490600190612968565b6000838152600960205260408120546008805493945090928490811061215c5761215c612a57565b90600052602060002001549050806008838154811061217d5761217d612a57565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806121b5576121b5612a41565b6001900381819060005260206000200160009055905550505050565b60006121dc83610e44565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612221906129ab565b90600052602060002090601f0160209004810192826122435760008555612289565b82601f1061225c57805160ff1916838001178555612289565b82800160010185558215612289579182015b8281111561228957825182559160200191906001019061226e565b506122959291506122cf565b5090565b5080546122a5906129ab565b6000825580601f106122b5575050565b601f016020900490600052602060002090810190610ca391905b5b8082111561229557600081556001016122d0565b600082601f8301126122f557600080fd5b813567ffffffffffffffff81111561230f5761230f612a6d565b612322601f8201601f191660200161290b565b81815284602083860101111561233757600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561236657600080fd5b81356113a281612a83565b6000806040838503121561238457600080fd5b823561238f81612a83565b9150602083013561239f81612a83565b809150509250929050565b6000806000606084860312156123bf57600080fd5b83356123ca81612a83565b925060208401356123da81612a83565b929592945050506040919091013590565b6000806000806080858703121561240157600080fd5b843561240c81612a83565b9350602085013561241c81612a83565b925060408501359150606085013567ffffffffffffffff81111561243f57600080fd5b61244b878288016122e4565b91505092959194509250565b6000806040838503121561246a57600080fd5b823561247581612a83565b915060208381013567ffffffffffffffff8082111561249357600080fd5b818601915086601f8301126124a757600080fd5b8135818111156124b9576124b9612a6d565b8060051b6124c885820161290b565b8281528581019085870183870188018c10156124e357600080fd5b60009350835b85811015612520578135878111156124ff578586fd5b61250d8e8b838c01016122e4565b85525092880192908801906001016124e9565b50989b909a5098505050505050505050565b6000806040838503121561254557600080fd5b823561255081612a83565b91506020830135801515811461239f57600080fd5b600080600080600060a0868803121561257d57600080fd5b853561258881612a83565b9450602086013567ffffffffffffffff8111156125a457600080fd5b6125b0888289016122e4565b9450506040860135925060608601359150608086013560ff811681146125d557600080fd5b809150509295509295909350565b600080604083850312156125f657600080fd5b823561260181612a83565b9150602083013567ffffffffffffffff81111561261d57600080fd5b612629858286016122e4565b9150509250929050565b6000806040838503121561264657600080fd5b823561265181612a83565b946020939093013593505050565b60006020828403121561267157600080fd5b81356113a281612a98565b60006020828403121561268e57600080fd5b81516113a281612a98565b6000602082840312156126ab57600080fd5b81516113a281612a83565b6000602082840312156126c857600080fd5b5035919050565b600080604083850312156126e257600080fd5b82359150602083013567ffffffffffffffff81111561261d57600080fd5b6000815180845261271881602086016020860161297f565b601f01601f19169290920160200192915050565b6000825161273e81846020870161297f565b9190910192915050565b6000835161275a81846020880161297f565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b6000835161279181846020880161297f565b8351908301906127a581836020880161297f565b01949350505050565b6001600160a01b038481168252831660208201526060604082018190526000906127da90830184612700565b95945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061281690830184612700565b9695505050505050565b6020815260006113a26020830184612700565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561293457612934612a6d565b604052919050565b6000821982111561294f5761294f612a15565b500190565b60008261296357612963612a2b565b500490565b60008282101561297a5761297a612a15565b500390565b60005b8381101561299a578181015183820152602001612982565b83811115610f7a5750506000910152565b600181811c908216806129bf57607f821691505b602082108114156129e057634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156129fa576129fa612a15565b5060010190565b600082612a1057612a10612a2b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ca357600080fd5b6001600160e01b031981168114610ca357600080fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a264697066735822122031a43f6af42c43dd3fb91fd193eb9dd2173cc76c046c0d5c39db9512bc0e144a64736f6c63430008060033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type BabelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BabelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Babel__factory extends ContractFactory {
  constructor(...args: BabelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _proxyRegistryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Babel> {
    return super.deploy(
      _proxyRegistryAddress,
      overrides || {}
    ) as Promise<Babel>;
  }
  override getDeployTransaction(
    _proxyRegistryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxyRegistryAddress, overrides || {});
  }
  override attach(address: string): Babel {
    return super.attach(address) as Babel;
  }
  override connect(signer: Signer): Babel__factory {
    return super.connect(signer) as Babel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BabelInterface {
    return new utils.Interface(_abi) as BabelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Babel {
    return new Contract(address, _abi, signerOrProvider) as Babel;
  }
}
